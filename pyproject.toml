# SPDX-License-Identifier: MIT
#
# SPDX-Copyright-Text: Â© 2017 PySecretHandshake contributors (see AUTHORS for more details)
[tool.poetry]
name = "secret-handshake"
version = "0.1.0"
description = "A module that implements Secret Handshake"
authors = ["Pedro Ferreira <pedro@dete.st>"]
license = "MIT"
readme = "README.rst"
packages = [{include = "secret_handshake"}]
include = ["secret_handshake/py.typed"]

[tool.poetry.dependencies]
python = "^3.9"
PyNaCl = "^1.5.0"

[tool.poetry.group.dev.dependencies]
check-manifest = "^0.49"
coverage = "^7.3.2"
isort = "^5.12.0"
pydocstyle = "^6.3.0"
pytest-cov = "^4.1.0"
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"
pre-commit = "^3.5.0"
commitizen = "^3.12.0"
black = "^23.10.1"
pylint = "^3.0.2"
mypy = "^1.6.1"
types-pyyaml = "^6.0.12.12"
reuse = "^2.1.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"

[tool.poetry.group.examples.dependencies]
pyyaml = "^6.0.1"

[tool.black]
line-length = 120

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 91
omit = ["examples/*"]

[tool.isort]
force_sort_within_sections = true
line_length = 120
profile = "black"

[tool.pylint.format]
max-line-length = 120

[tool.pytest.ini_options]
addopts = "--cov=. --no-cov-on-fail"
asyncio_mode = "auto"
markers = [
    "client_app_key(k): a 32-bytes long data to use as the client application key (CAPS)",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
